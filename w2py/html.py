'''
HTML utilities

Routines for generating HTML output

@author: Robert Toomey (retoomey)
'''

# System import
import os

# Imports from my library
import w2py.resource as w2res
import log

def genHTMLHeader(f, title):
    """ Generate a header for any HTML file we create """
    f.write("<!DOCTYPE html>\n")
    f.write("<!Generated by w2py library https://github.com/retoomey/wdss2python>\n")
    f.write("<!Robert Toomey retoomey@gmail.com>\n")
    f.write("<html>\n")
    f.write("<head>\n")
    f.write("<meta charset=\"UTF-8\">\n")
    f.write("<title>{0}</title>\n".format(title))
    f.write("</head>\n")
    f.write("<body>\n")

def genHTMLFooter(f):
    """ Generate a footer for any HTML file we create. Simple for the moment """
    f.write("</body>\n</html>\n")
    f.close()

def genHTMLLink(f, link, linkname):
    """ Generate a HREF link """
    f.write("<a href=\"{0}\">{1}</a>".format(link, linkname)) 
    
def genHTMLTableContent(f, link, linkname):
    """ Generate one item in our table of contents HTML file """
    f.write("<li>")
    genHTMLLink(f, link, linkname)
    f.write("\n")

def genFileBase(f):
    """ Given a filename, generate a safe 'base' name for HTML and PNG filenames """
    baseName = w2res.getBaseMulti(f)
    baseName = "R"+w2res.removeGDBCharacters(baseName)
    return baseName
   
def genHTMLFile(D, outHTMLFolder, outputHTMLFile, inputPNGFile, indexLocation="",
                prevFile="", nextFile=""):  
    """ Given one of our DataType objects, image file and html location, generate one HTML page """
    workhtml = w2res.getTempFile(outHTMLFolder, outputHTMLFile)
    percentWidth = 95
    
    # Guess we 'could' use so5mething like beautiful, but our html should be pretty simple,
    # it's the actual gathering of stats, etc. that was the fun part, lol
    # We'll keep the tags separate for clarity for now
    f = open(workhtml, "w")
    
    timestamp = D.getTime()
    tName = D.getTypeName()
    fileName = D.getFileName()
    
    # Document header
    genHTMLHeader(f, "{0}-{1}".format(tName, timestamp))
    
    f.write("Datafile: <b>\"{0}\"</b></br>\n".format(os.path.basename(fileName)))

    # Return to table of contents if we have one
    if indexLocation:
        f.write("<a href=\"{0}\">Return to index</a><br>\n".format(indexLocation))
    
    # Generate previous and next file links...
    if prevFile:
        f.write("Prev:")
        genHTMLLink(f, prevFile+".html", prevFile)
        f.write("<br>\n")
        
    if nextFile:
        f.write("Next:")
        genHTMLLink(f, nextFile+".html", nextFile)
        f.write("<br>\n")   
    
    
    f.write("Type info: <b>\"{0}\"</b></br>\n".format(tName))
    f.write("Timestamp: <b>{0}</b><br>\n".format(timestamp))
    
    # Insert the PNG file into the page, make it clickable if we have imagelink
    if nextFile:
        f.write("<a href=\"{0}\">".format(nextFile+".html"))
    f.write("<img src=\"{0}\" width=\"{1}%\" alt=\"data image\">\n".format(inputPNGFile, percentWidth))
    if nextFile:
        f.write("</a>")
  
    log.info("Wrote html page to "+outputHTMLFile)
    genHTMLFooter(f)